/*!
 * Knockout-UI v0.5.0
 * A home for rich UI components based on KnockoutJS
 * Copyright (c) 2013 Ian Mckay
 * https://github.com/madcapnmckay/Knockout-UI.git
 * License: MIT (http://opensource.org/licenses/mit-license.php)
**/
(function(){var logger=function(e){"undefined"!=typeof debug&&$("<div></div>").appendTo("#log").text((new Date).toGMTString()+" : eyepatch-window.js - "+e)},templateEngine=new ko.jqueryTmplTemplateEngine,Button=function(data,parentViewModel){this.parentViewModel=parentViewModel,this.iconCssClass=ko.observable(data.iconCssClass),this.cssClass=ko.observable(data.cssClass||"title-button"),this.onClick=data.onClick,this.title=ko.observable(data.title||""),this.isFirst=ko.observable(data.isFirst),this.isLast=ko.observable(data.isLast),this.clicked=function(node){void 0!==this.onClick&&("minimize"===this.onClick?this.parentViewModel.minimize():"close"===this.onClick?this.parentViewModel.close():"function"==typeof this.onClick?this.onClick.call(this.parentViewModel,this):(this.onClick=eval(data.onClick),this.onClick.call(this.parentViewModel,this)))}.bind(this)},Window=function(data,parentViewModel){this.parentViewModel=parentViewModel,this.cssClass=ko.observable(data.cssClass||parentViewModel.cssClass()),this.id=data.id,this.name=ko.observable(data.name),this.width=ko.observable(data.width||500),this.height=ko.observable(data.height||500),this.isPinned=ko.observable(data.isPinned||!1),this.contents=data.contents,this.create="function"==typeof data.create?data.create:eval(data.create),this.taskbarCssClass=data.taskbarCssClass,this.buttons=ko.observableArray([]);var inputPosition=$.cookie(this.id+"position")||data.position;this.position=ko.observable(inputPosition||"10,10");var savedMinimized=$.cookie(this.id+"state");this.isLoading=ko.observable(!1),this.isMinimized=ko.observable(!1),null!==savedMinimized?this.isMinimized("true"===savedMinimized):void 0!==data.isMinimized&&this.isMinimized(data.isMinimized),this.buttonsChange=function(){for(var e=0;data.buttons.length>e;e+=1)data.buttons[e].isFirst=0===e,data.buttons[e].isLast=e===data.buttons.length-1,this.buttons.push(new Button(data.buttons[e],this))}.bind(this),this.buttonsChange(),this.buttons.subscribe(this.buttonsChange),this.left=function(){return this.position().split(",")[0]+"px"}.bind(this),this.top=function(){return this.position().split(",")[1]+"px"}.bind(this),this.minimize=function(){this.isMinimized(!this.isMinimized())}.bind(this),this.close=function(){this.parentViewModel.removeWindow(this.id)},this.saveState=function(){void 0!==$.cookie&&($.cookie(this.id+"position",this.position()),$.cookie(this.id+"state",this.isMinimized()))}.bind(this)};ko.windowManager={viewModel:function(e){this.cssClass=ko.observable(e.cssClass||"ui-window"),this.taskbarCssClass=ko.observable(e.taskbarCssClass||"ui-taskbar"),this.windows=ko.observableArray([]),ko.utils.arrayForEach(e.windows,function(e){this.windows.push(new Window(e,this))}.bind(this)),this.addWindow=function(e){this.windows.push(new Window(e,this))},this.removeWindow=function(e){this.windows.remove(function(t){return t.id===e})}}},ko.addTemplateSafe("windowTemplate",'                    <div class="ui-window-stack ${cssClass}" data-bind="window : isPinned, windowVisible : !isMinimized(), style : { height: (height()- 35) + \'px\', width: width() + \'px\' }, css : { loading : isLoading() }">						<div class="inner-window" data-bind="style : { width: (width() + 8) + \'px\', height : (height() + 3) + \'px\' }">							<div class="title-bar" data-bind=\'template: { name : "windowButtonTemplate", foreach: buttons }\'><span class="loader"/></div>						</div>						<div class="outer-content">							<div class="inner-content" data-bind="style : { height: (height() - 39) + \'px\' }">							</div>						</div>					</div>',templateEngine),ko.addTemplateSafe("windowButtonTemplate",'                    <div class="${cssClass}" data-bind="click : clicked, attr: { title: title }, css : { right : isFirst(), left : isLast() }, hover : \'title-button-hover\'"><div class="title-button-inner"><div class="icon ${ iconCssClass }"></div></div></div>',templateEngine),ko.addTemplateSafe("koTaskbarItemTemplate",'                    <div class="taskbar-item" data-bind="click: minimize, hover: \'taskbar-item-hover\', taskbarVisible : isMinimized()" title="${ name }" data-id="${ id }">						<div class="inner-taskbar-item">							<div class="taskbar-icon ${ taskbarCssClass }">							</div>						</div>					</div>',templateEngine),ko.addTemplateSafe("windowContainerTemplate",'					<div class="window-container" >						<div class="windows ${ cssClass }" data-bind=\'template: { name : "windowTemplate", foreach: windows }\'></div>						<div class="${ taskbarCssClass }">							<div class="inner-taskbar" data-bind=\'template: { name : "koTaskbarItemTemplate", foreach: windows }\'></div>						</div>					</div>',templateEngine),ko.bindingHandlers.windowManager={init:function(e,t){var i=t();windowContainer=e.appendChild(document.createElement("DIV")),ko.renderTemplate("windowContainerTemplate",i,{templateEngine:templateEngine},windowContainer,"replaceNode")},update:function(e,t,i,n){for(var s=t(),a=s.cssClass(),o=$("."+a+" .inner-content",e),d=0;s.windows().length>d;d+=1){var l=s.windows()[d];l.rendered||(l.create(o[d],l,n),l.rendered=!0)}}},ko.bindingHandlers.window={init:function(e,t,i,n){var s=$(e),a=ko.utils.unwrapObservable(t()),o={addClasses:!1,handle:".title-bar",scroll:!1,stop:function(e,t){n.position(t.offset.left+","+t.offset.top),n.saveState(),$(this).maxZIndex({group:".ui-window-stack",inc:1,min:1e5})},drag:function(){$(this).maxZIndex({group:".ui-window-stack",inc:1,min:1e5})},create:function(){a&&s.css("position","fixed")}};s.draggable(o).bind("mousedown",function(){$(this).maxZIndex({group:".ui-window-stack",inc:1,min:1e5})}),s.css({position:"absolute",top:n.top(),left:n.left()})},update:function(e,t){var i=$(e),n=ko.utils.unwrapObservable(t());n?i.css("position","fixed"):i.css("position","absolute")}},ko.bindingHandlers.taskbarVisible={init:function(e,t){var i=($(e),ko.utils.unwrapObservable(t())),n="none"!==e.style.display;i&&!n?e.style.display="":!i&&n&&(e.style.display="none")},update:function(e,t){var i=$(e),n=ko.utils.unwrapObservable(t()),s="none"!==e.style.display,a=i.outerWidth(!0),o=i.outerHeight(!0);n&&!s?e.style.display="":!n&&s&&i.fadeOut("slow","swing",function(){$("<div></div>").width(a).height(o).css("display","inline-block").insertAfter(i).animate({width:0},500,function(){$(this).remove()})})}},ko.bindingHandlers.windowVisible={init:function(e,t,i,n){var s=$(e),a=ko.utils.unwrapObservable(t());a?s.css({top:n.top(),left:n.left()}):s.css({left:2*-n.width()+"px"})},update:function(e,t,i,n){var s=$(e),a=ko.utils.unwrapObservable(t()),o=s.offset().left>-n.width(),d=s.clone(!1),l=$("."+n.parentViewModel.taskbarCssClass()).offset(),r=$('.taskbar-item[data-id="'+n.id+'"]').offset();a?r&&!o&&(d.width(55).height(45).css({opacity:0,top:r.top+"px",left:r.left+"px"}).appendTo("div.window-container .windows"),d.css("position","fixed").show().animate({opacity:1,left:n.position().split(",")[0],top:n.position().split(",")[1],width:s.outerWidth(!1),height:s.outerHeight(!1)},200,function(){$(this).remove(),s.css({top:n.top(),left:n.left()})})):l&&(s.css({left:2*-n.width()+"px"}),d.css("position","fixed").appendTo("div.window-container .windows").animate({opacity:0,left:l.left,top:l.top-40,width:55,height:45},400,function(){$(this).remove()})),n.saveState()}}})();