/*!
 * Knockout-UI v0.5.0
 * A home for rich UI components based on KnockoutJS
 * Copyright (c) 2013 Ian Mckay
 * https://github.com/madcapnmckay/Knockout-UI.git
 * License: MIT (http://opensource.org/licenses/mit-license.php)
**/
(function(){var t=new ko.jqueryTmplTemplateEngine;ko.dropdown={viewModel:function(t){this.element=t.element,this.boundValue=t.boundValue,this.selectItems=t.selectItems,this.optionsBinding=t.optionsBinding,this.optionsText=t.optionsText,this.optionsValue=t.optionsValue,this.optionsCaption=t.optionsCaption,this.minLength=0,this.position={my:"right top",at:"right bottom",offset:"0 -1"},this.data=function(){if(this.optionsBinding){var t,e,i=[];for(t=0,e=this.selectItems().length;e>t;t++){var n="string"==typeof this.optionsValue?this.selectItems()[t][this.optionsValue]:this.selectItems()[t],o=this.optionsText;optionText="function"==typeof o?o(value[t]):"string"==typeof o?this.selectItems()[t][o]:n,n=ko.utils.unwrapObservable(n),optionText=ko.utils.unwrapObservable(optionText),i.push({text:optionText,value:n})}return i}return this.selectItems()},this.selectedText=ko.dependentObservable(function(){this.data();var t=ko.utils.arrayFirst(this.data(),function(t){return t.value===this.boundValue()},this),e=null===t?"":t.text;return e},this),this.source=function(t,e){var i=RegExp($.ui.autocomplete.escapeRegex(t.term),"i");e(ko.utils.arrayMap(ko.utils.arrayFilter(this.data(),function(e){return e.text&&(!t.term||i.test(e.text))}),function(e){return{label:e.text.replace(RegExp("(?![^&;]+;)(?!<[^<>]*)("+$.ui.autocomplete.escapeRegex(t.term)+")(?![^<>]*>)(?![^&;]+;)","gi"),"<strong>$1</strong>"),value:e.value}}))}.bind(this),this.select=function(t,e){void 0!==this.element&&this.element.val(e.item.value),this.boundValue(e.item.value),t.preventDefault()}.bind(this),this.change=function(t,e){if(!e.item){var i=$(t.target),n=i.val(),o=RegExp("^"+$.ui.autocomplete.escapeRegex(n)+"$","i"),s=!1,a=this;$.each(this.data(),function(){return s=""===n&&void 0!==a.optionsCaption||this.text.match(o),s?(s=!0,a.boundValue(""===n?void 0:this.value),!1):void 0}),s||i.val(this.boundValue())}}.bind(this),this.renderItem=function(t,e){return $("<li></li>").data("item.autocomplete",e).append("<a>"+e.label+"</a>").appendTo(t)}.bind(this),this.open=function(t){$(t.target).parent().addClass("open")},this.close=function(t){$(t.target).parent().removeClass("open")},this.showAll=function(){this.search("")}.bind(this)}},ko.addTemplateSafe("dropdownTemplate",'<div class="dropdown"><input type="text" data-bind="value: selectedText(), autocomplete : $data" /><a class="button" tabindex="-1" data-bind="click : showAll"></a></div>',t),ko.bindingHandlers.dropdown={init:function(e,i,n){var o,s,a,l,r,u,d,h;if(a=n(),s=a.options,o=ko.utils.unwrapObservable(i()),l=$("<div></div>").insertAfter(e),r=$(e).hide(),s){if(void 0===a.value)throw Error("A value binding must be used if an options binding is attached");d=a.value}else{var c=r.children(":selected").get(0).value;if(ko.isWriteableObservable(i())){if(d=i(),o!==c){var p=r.children("option").filter(function(){return $(this).text()===o||$(this).val()===o});p.length>0?r.val(o):d(c)}}else d=new ko.observable(c)}h=void 0===s?new ko.observableArray(r.children("option").map(function(){return{text:this.text,value:this.value}})):s,u=new ko.dropdown.viewModel({element:r,boundValue:d,selectItems:h,optionsBinding:void 0!==s,optionsValue:a.optionsValue,optionsText:a.optionsText,optionsCaption:a.optionsCaption}),ko.renderTemplate("dropdownTemplate",u,{templateEngine:t},l.get(0),"replaceNode")},update:function(t,e,i){if(!i().options){var n=$(t),o=ko.utils.unwrapObservable(e()),s=n.val(),a=o!==s;a&&n.val(o)}}}})();