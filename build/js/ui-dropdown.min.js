/*! Knockout-UI - A home for rich UI components based on KnockoutJS Copyright (c) 2013 Ian Mckay */
(function(){var e=new ko.jqueryTmplTemplateEngine;ko.dropdown={viewModel:function(e){this.element=e.element,this.boundValue=e.boundValue,this.selectItems=e.selectItems,this.optionsBinding=e.optionsBinding,this.optionsText=e.optionsText,this.optionsValue=e.optionsValue,this.optionsCaption=e.optionsCaption,this.minLength=0,this.position={my:"right top",at:"right bottom",offset:"0 -1"},this.data=function(){if(this.optionsBinding){var e,t,i=[];for(e=0,t=this.selectItems().length;t>e;e++){var n="string"==typeof this.optionsValue?this.selectItems()[e][this.optionsValue]:this.selectItems()[e],s=this.optionsText;optionText="function"==typeof s?s(value[e]):"string"==typeof s?this.selectItems()[e][s]:n,n=ko.utils.unwrapObservable(n),optionText=ko.utils.unwrapObservable(optionText),i.push({text:optionText,value:n})}return i}return this.selectItems()},this.selectedText=ko.dependentObservable(function(){this.data();var e=ko.utils.arrayFirst(this.data(),function(e){return e.value===this.boundValue()},this),t=null===e?"":e.text;return t},this),this.source=function(e,t){var i=RegExp($.ui.autocomplete.escapeRegex(e.term),"i");t(ko.utils.arrayMap(ko.utils.arrayFilter(this.data(),function(t){return t.text&&(!e.term||i.test(t.text))}),function(t){return{label:t.text.replace(RegExp("(?![^&;]+;)(?!<[^<>]*)("+$.ui.autocomplete.escapeRegex(e.term)+")(?![^<>]*>)(?![^&;]+;)","gi"),"<strong>$1</strong>"),value:t.value}}))}.bind(this),this.select=function(e,t){void 0!==this.element&&this.element.val(t.item.value),this.boundValue(t.item.value),e.preventDefault()}.bind(this),this.change=function(e,t){if(!t.item){var i=$(e.target),n=i.val(),s=RegExp("^"+$.ui.autocomplete.escapeRegex(n)+"$","i"),a=!1,o=this;$.each(this.data(),function(){return a=""===n&&void 0!==o.optionsCaption||this.text.match(s),a?(a=!0,o.boundValue(""===n?void 0:this.value),!1):void 0}),a||i.val(this.boundValue())}}.bind(this),this.renderItem=function(e,t){return $("<li></li>").data("item.autocomplete",t).append("<a>"+t.label+"</a>").appendTo(e)}.bind(this),this.open=function(e){$(e.target).parent().addClass("open")},this.close=function(e){$(e.target).parent().removeClass("open")},this.showAll=function(){this.search("")}.bind(this)}},ko.addTemplateSafe("dropdownTemplate",'<div class="dropdown"><input type="text" data-bind="value: selectedText(), autocomplete : $data" /><a class="button" tabindex="-1" data-bind="click : showAll"></a></div>',e),ko.bindingHandlers.dropdown={init:function(t,i,n){var s,a,o,d,l,r,c,h;if(o=n(),a=o.options,s=ko.utils.unwrapObservable(i()),d=$("<div></div>").insertAfter(t),l=$(t).hide(),a){if(void 0===o.value)throw Error("A value binding must be used if an options binding is attached");c=o.value}else{var u=l.children(":selected").get(0).value;if(ko.isWriteableObservable(i())){if(c=i(),s!==u){var p=l.children("option").filter(function(){return $(this).text()===s||$(this).val()===s});p.length>0?l.val(s):c(u)}}else c=new ko.observable(u)}h=void 0===a?new ko.observableArray(l.children("option").map(function(){return{text:this.text,value:this.value}})):a,r=new ko.dropdown.viewModel({element:l,boundValue:c,selectItems:h,optionsBinding:void 0!==a,optionsValue:o.optionsValue,optionsText:o.optionsText,optionsCaption:o.optionsCaption}),ko.renderTemplate("dropdownTemplate",r,{templateEngine:e},d.get(0),"replaceNode")},update:function(e,t,i){if(!i().options){var n=$(e),s=ko.utils.unwrapObservable(t()),a=n.val(),o=s!==a;o&&n.val(s)}}}})();